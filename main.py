# main.py (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º admin.router)

import asyncio
import os
from aiogram import Bot, Dispatcher
from dotenv import load_dotenv

from handlers import start, admin, booking, contact, search
from middlewares.antiflood import AntifloodMiddleware
from utils.logger import setup_logger

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv("t.env")
TOKEN = os.getenv("TOKEN")
OWNER_ID = os.getenv("OWNER_ID")

if not TOKEN:
    raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
if not OWNER_ID:
    print("‚ö†Ô∏è OWNER_ID –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å t.env")

async def main():
    setup_logger()
    print("üü¢ KalinRentBot –∑–∞–ø—É—â–µ–Ω!")
    print("OWNER_ID =", OWNER_ID)

    bot = Bot(token=TOKEN)
    dp = Dispatcher()

    # Middleware
    dp.message.middleware(AntifloodMiddleware())

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(start.router)
    dp.include_router(admin.router)  # ‚ö†Ô∏è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö, –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç
    dp.include_router(booking.router)
    dp.include_router(contact.router)
    dp.include_router(search.router)

    # –°—Ç–∞—Ä—Ç—É–µ–º polling
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())