# handlers/booking.py (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ñ–∏–∫—Å –¥–ª—è –¥–∞—Ç—ã)

from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters.state import State, StatesGroup
from keyboards.calendar_keyboard import generate_calendar_keyboard, IGNORE_CALLBACK
from datetime import datetime  # ‚úÖ —Ñ–∏–∫—Å

router = Router()

class BookingStates(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()
    waiting_for_date_select = State()
    waiting_for_nights = State()
    waiting_for_comment = State()
    confirmation = State()

@router.callback_query(F.data.startswith("book_"))
async def start_booking(callback: types.CallbackQuery, state: FSMContext):
    apartment_id = callback.data.replace("book_", "")
    await state.update_data(apartment_id=apartment_id)
    await state.set_state(BookingStates.waiting_for_name)
    await callback.message.answer("üë§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await callback.answer()

@router.message(BookingStates.waiting_for_name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(BookingStates.waiting_for_phone)
    await message.answer("üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@router.message(BookingStates.waiting_for_phone)
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(BookingStates.waiting_for_date_select)
    await message.answer("üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∑–∞–µ–∑–¥–∞:", reply_markup=generate_calendar_keyboard())

@router.callback_query(F.data.startswith("select_day_"))
async def process_date_selection(callback: types.CallbackQuery, state: FSMContext):
    day = callback.data.replace("select_day_", "")
    now = datetime.now()
    date_string = f"{day.zfill(2)}.{now.month:02}.{now.year}"
    await state.update_data(dates=date_string)
    await state.set_state(BookingStates.waiting_for_nights)
    await callback.message.answer("üåô –ù–∞ —Å–∫–æ–ª—å–∫–æ –Ω–æ—á–µ–π –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è?")
    await callback.answer()

@router.callback_query(F.data == IGNORE_CALLBACK)
async def ignore_callback(callback: types.CallbackQuery):
    await callback.answer()

@router.message(BookingStates.waiting_for_nights)
async def process_nights(message: types.Message, state: FSMContext):
    await state.update_data(nights=message.text)
    await state.set_state(BookingStates.waiting_for_comment)
    await message.answer("üí¨ –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '-'")

@router.message(BookingStates.waiting_for_comment)
async def process_comment(message: types.Message, state: FSMContext):
    await state.update_data(comment=message.text)
    data = await state.get_data()

    text = (
        f"üè° <b>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã ‚Ññ{data['apartment_id']}</b>\n\n"
        f"üë§ <b>–ò–º—è:</b> {data['name']}\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {data['phone']}\n"
        f"üìÖ <b>–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞:</b> {data['dates']}\n"
        f"üåô <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π:</b> {data['nights']}\n"
        f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}"
    )

    confirm_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_booking"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_booking")
        ]
    ])

    await message.answer(text, parse_mode="HTML", reply_markup=confirm_keyboard)
    await state.set_state(BookingStates.confirmation)

@router.callback_query(F.data == "confirm_booking")
async def confirm_booking(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()

    text = (
        f"üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!</b>\n\n"
        f"üè° –ö–≤–∞—Ä—Ç–∏—Ä–∞ ‚Ññ{data['apartment_id']}\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"üìÖ –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞: {data['dates']}\n"
        f"üåô –ù–æ—á–µ–π: {data['nights']}\n"
        f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['comment']}"
    )

    await callback.message.answer(text, parse_mode="HTML")
    await state.clear()
    await callback.answer("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!")

@router.callback_query(F.data == "cancel_booking")
async def cancel_booking(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer("‚ùå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await callback.answer()
