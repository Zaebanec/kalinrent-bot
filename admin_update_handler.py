
from aiogram import Router, types, F
from aiogram.types import CallbackQuery
import subprocess
from keyboards.admin_menu import admin_menu

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /admin –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é
@router.message(F.text == "/admin")
async def admin_panel(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=admin_menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
@router.callback_query(F.data == "admin_update_bot")
async def update_bot_callback(callback: CallbackQuery):
    await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞—Ç–æ...", show_alert=False)
    try:
        result = subprocess.run(["python3", "git_push.py"], capture_output=True, text=True)
        if result.returncode == 0:
            await callback.message.answer("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø—É—à–µ–Ω—ã. –ë–æ—Ç —Å–∫–æ—Ä–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è.")
        else:
            await callback.message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ:\n{result.stderr}")
    except Exception as e:
        await callback.message.answer(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞:\n{e}")
